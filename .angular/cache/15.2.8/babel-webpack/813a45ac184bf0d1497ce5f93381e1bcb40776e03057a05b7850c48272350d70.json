{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../authservice.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../home/home.component\";\nfunction LoginComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-home\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginComponent {\n  constructor(svc, router) {\n    this.svc = svc;\n    this.router = router;\n  }\n  logIn() {\n    if (this.svc.logIn(this.email, this.password)) {\n      console.log(\"Login button clicked\");\n      this.loggedIn = true;\n      console.log(\"user is valid\");\n      this.router.navigate(['/home']);\n      return true;\n    } else {\n      console.log(\"Invalid login\");\n      return false;\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthserviceService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 12,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [\"for\", \"email\"], [\"type\", \"text\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngIf\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"login works!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n        return ctx.logIn();\n      });\n      i0.ɵɵelementStart(3, \"label\", 1);\n      i0.ɵɵtext(4, \"email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"label\", 3);\n      i0.ɵɵtext(7, \"Password:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, LoginComponent_div_11_Template, 2, 0, \"div\", 6);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.email);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.loggedIn);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.HomeComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAUEA,2BAAsB;IACpBA,2BAAqB;IACvBA,iBAAM;;;ACFR,OAAM,MAAOC,cAAc;EAQ3BC,YAAoBC,GAAsB,EAASC,MAAa;IAA5C,QAAG,GAAHD,GAAG;IAA4B,WAAM,GAANC,MAAM;EAAS;EAGlEC,KAAK;IACH,IAAG,IAAI,CAACF,GAAG,CAACE,KAAK,CAAC,IAAI,CAACC,KAAK,EAAC,IAAI,CAACC,QAAQ,CAAC,EAAC;MAC1CC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACnC,IAAI,CAACC,QAAQ,GAAC,IAAI;MAClBF,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;MAC/B,OAAO,IAAI;KACZ,MACG;MACFH,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,OAAO,KAAK;;EAEhB;;AAvBaR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDV3BhB,yBAAG;MAAAA,4BAAY;MAAAA,iBAAI;MACnBA,+BAA2B;MAArBA;QAAA,OAAYiB,WAAO;MAAA,EAAC;MACtBjB,gCAAmB;MAAAA,sBAAM;MAAAA,iBAAQ;MACjCA,gCAAwE;MAA7BA;QAAA;MAAA,EAAmB;MAA9DA,iBAAwE;MAExEA,gCAAsB;MAAAA,yBAAS;MAAAA,iBAAQ;MACvCA,gCAAqF;MAAhCA;QAAA;MAAA,EAAsB;MAA3EA,iBAAqF;MAErFA,iCAAsB;MAAAA,sBAAK;MAAAA,iBAAS;MAEtCA,iEAEM;;;MATuCA,eAAmB;MAAnBA,mCAAmB;MAGTA,eAAsB;MAAtBA,sCAAsB;MAIvEA,eAAc;MAAdA,mCAAc","names":["i0","LoginComponent","constructor","svc","router","logIn","email","password","console","log","loggedIn","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\imp\\AngularSmallPRoject\\AngularloginApp\\LoginApp\\src\\app\\login\\login.component.html","D:\\imp\\AngularSmallPRoject\\AngularloginApp\\LoginApp\\src\\app\\login\\login.component.ts"],"sourcesContent":["<p>login works!</p>\n<form (ngSubmit)=\"logIn()\">\n    <label for=\"email\">email:</label>\n    <input type=\"text\" id=\"email\" name=\"email\" [(ngModel)]=\"email\" required>\n\n    <label for=\"password\">Password:</label>\n    <input type=\"password\" id=\"password\" name=\"password\" [(ngModel)]=\"password\" required>\n\n    <button type=\"submit\">Login</button>\n</form>\n  <div *ngIf=\"loggedIn\">\n    <app-home></app-home>\n  </div>","import { Component, resolveForwardRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthserviceService } from '../authservice.service';\nimport { User } from '../user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  \n  email:string |any;\n  password:string |any\n loggedIn:any;\n role:any;\n\n\nconstructor(private svc:AuthserviceService,private router:Router){}\n\n\nlogIn(){\n  if(this.svc.logIn(this.email,this.password)){\n    console.log(\"Login button clicked\");\n    this.loggedIn=true;\n    console.log(\"user is valid\");\n    this.router.navigate(['/home']);\n    return true;\n  }\n  else{\n    console.log(\"Invalid login\");\n    return false;\n  }\n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}